// <auto-generated />
using System;
using HospitalzinhoAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HospitalzinhoAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251018193936_ArrumandoDateProntuario")]
    partial class ArrumandoDateProntuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteContato", b =>
                {
                    b.Property<int>("PacienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("TelefoneCelular")
                        .HasColumnType("text");

                    b.Property<string>("TelefoneResidencial")
                        .HasColumnType("text");

                    b.HasKey("PacienteId");

                    b.ToTable("PacientesContatos");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteConvenio", b =>
                {
                    b.Property<int>("PacienteId")
                        .HasColumnType("integer");

                    b.Property<string>("NumeroCarteirinha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("PacienteId");

                    b.ToTable("PacientesConvenios");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteEndereco", b =>
                {
                    b.Property<int>("PacienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<string>("CEP")
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<string>("Complemento")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text");

                    b.Property<string>("Numero")
                        .HasColumnType("text");

                    b.HasKey("PacienteId");

                    b.ToTable("PacientesEnderecos");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CNS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CPFMae")
                        .HasColumnType("text");

                    b.Property<string>("CPFPai")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("Escolaridade")
                        .HasColumnType("integer");

                    b.Property<int?>("Etinia")
                        .HasColumnType("integer");

                    b.Property<int?>("Genero")
                        .HasColumnType("integer");

                    b.Property<string>("Nacionalidade")
                        .HasColumnType("text");

                    b.Property<string>("Naturalidade")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeMae")
                        .HasColumnType("text");

                    b.Property<string>("NomePai")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Prontuario.ProntuarioAlergia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoAlergia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("ProntuarioAlergias");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Prontuario.ProntuarioConsulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataConsulta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Resumo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("ProntuarioConsultas");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Prontuario.ProntuarioInternacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MotivoInternacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("ProntuarioInternacoes");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Prontuario.ProntuarioVacina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAplicacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Dose")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("ProntuarioVacinas");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.MinisterioDaSaude.Hospital.HospitalEndereco", b =>
                {
                    b.Property<int>("HospitalUnidadeId")
                        .HasColumnType("integer");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Complemento")
                        .HasColumnType("text");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("HospitalUnidadeId");

                    b.ToTable("HospitalEnderecos");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.MinisterioDaSaude.Hospital.HospitalInstituicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CNES")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TokenAcesso")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HospitalInstituicoes");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.MinisterioDaSaude.Hospital.HospitalUnidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HospitalInstituicaoId")
                        .HasColumnType("integer");

                    b.Property<int>("HospitalTipo")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HospitalInstituicaoId");

                    b.ToTable("HospitalUnidades");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteContato", b =>
                {
                    b.HasOne("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteModel", "Paciente")
                        .WithOne("Contato")
                        .HasForeignKey("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteContato", "PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteConvenio", b =>
                {
                    b.HasOne("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteModel", "Paciente")
                        .WithOne("Convenio")
                        .HasForeignKey("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteConvenio", "PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteEndereco", b =>
                {
                    b.HasOne("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteModel", "Paciente")
                        .WithOne("Endereco")
                        .HasForeignKey("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteEndereco", "PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Prontuario.ProntuarioAlergia", b =>
                {
                    b.HasOne("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteModel", "Paciente")
                        .WithMany("ProntuarioAlergia")
                        .HasForeignKey("PacienteId");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Prontuario.ProntuarioConsulta", b =>
                {
                    b.HasOne("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteModel", "Paciente")
                        .WithMany("ProntuarioConsulta")
                        .HasForeignKey("PacienteId");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Prontuario.ProntuarioInternacao", b =>
                {
                    b.HasOne("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteModel", "Paciente")
                        .WithMany("ProntuarioInternacao")
                        .HasForeignKey("PacienteId");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Prontuario.ProntuarioVacina", b =>
                {
                    b.HasOne("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteModel", "Paciente")
                        .WithMany("ProntuarioVacina")
                        .HasForeignKey("PacienteId");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.MinisterioDaSaude.Hospital.HospitalEndereco", b =>
                {
                    b.HasOne("HospitalzinhoAPI.Models.MinisterioDaSaude.Hospital.HospitalUnidade", "HospitalUnidade")
                        .WithOne("Endereco")
                        .HasForeignKey("HospitalzinhoAPI.Models.MinisterioDaSaude.Hospital.HospitalEndereco", "HospitalUnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HospitalUnidade");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.MinisterioDaSaude.Hospital.HospitalUnidade", b =>
                {
                    b.HasOne("HospitalzinhoAPI.Models.MinisterioDaSaude.Hospital.HospitalInstituicao", "HospitalInstituicao")
                        .WithMany("Unidades")
                        .HasForeignKey("HospitalInstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HospitalInstituicao");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.Hospital.Paciente.PacienteModel", b =>
                {
                    b.Navigation("Contato");

                    b.Navigation("Convenio");

                    b.Navigation("Endereco");

                    b.Navigation("ProntuarioAlergia");

                    b.Navigation("ProntuarioConsulta");

                    b.Navigation("ProntuarioInternacao");

                    b.Navigation("ProntuarioVacina");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.MinisterioDaSaude.Hospital.HospitalInstituicao", b =>
                {
                    b.Navigation("Unidades");
                });

            modelBuilder.Entity("HospitalzinhoAPI.Models.MinisterioDaSaude.Hospital.HospitalUnidade", b =>
                {
                    b.Navigation("Endereco")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
